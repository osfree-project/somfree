#ifndef biter_idl
#define biter_idl
#include <naming.idl>
module Biter
{
	interface BINDITER_TWO;
	interface BINDITER_ONE;
	interface BINDITER_TWO :
		CosNaming::BindingIterator
	{
		void BI_Init2(
			inout somToken ctrl,
			in CosNaming::BindingList bl);
		void add_bindings(
			in CosNaming::BindingList bl);
#ifdef __SOMIDL__
		implementation
		{
#ifdef __PRIVATE__
			CosNaming::BindingList bindings;
			unsigned long pos;
			functionprefix = biter_BIT_;
			next_one : override;
			next_n : override;
			destroy : override;
#endif
			releaseorder : BI_Init2,add_bindings;
			dllname = "somnmf.dll";
			majorversion = 3;
			minorversion = 0;
		};
#endif /* __SOMIDL__ */
	};
	interface BINDITER_ONE :
		CosNaming::BindingIterator
	{
		typedef sequence<string> stringSeq;
		void BI_Init1(
			inout somToken ctrl,
			in stringSeq key,
			in string databaseFile);
#ifdef __SOMIDL__
		implementation
		{
#ifdef __PRIVATE__
			sequence<string> cursor;
			string databaseFile;
			CosNaming::BindingList bindings;
			functionprefix = biter_BIO_;
			next_one : override;
			next_n : override;
			destroy : override;
#endif
			dllname = "somnmf.dll";
			releaseorder : BI_Init1;
		};
#endif /* __SOMIDL__ */
	};
};
#endif /* biter_idl */
