/**************************************************************************
 *
 *  Copyright 2008, Roger Brown
 *
 *  This file is part of Roger Brown's Toolkit.
 *
 *  This program is free software: you can redistribute it and/or modify it
 *  under the terms of the GNU Lesser General Public License as published by the
 *  Free Software Foundation, either version 3 of the License, or (at your
 *  option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 *  more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>
 *
 */

/*
 * $Id$
 */

#ifndef emregdat_idl
#define emregdat_idl
#ifdef __PRIVATE__
#include <somref.idl>
#else
#include <somobj.idl>
#endif

interface SOMEEMRegisterData : 
#ifdef __PRIVATE__
SOMRefObject
#else
SOMObject
#endif
{
	void someClearRegData();
	void someSetRegDataClientType(in string clientType);
	void someSetRegDataEventMask(in long eventType,in va_list ap);
	void someSetRegDataSink(in long sink);
	void someSetRegDataSinkMask(in unsigned long sinkMask);
	void someSetRegDataTimerCount(in long count);
	void someSetRegDataTimerInterval(in long interval);
#ifdef __PRIVATE__
	string someGetRegDataClientType();
	long someGetRegDataEventMask();
	long someGetRegDataSink();
	unsigned long someGetRegDataSinkMask();
	long someGetRegDataTimerCount();
	long someGetRegDataTimerInterval();
	string dupl_string(in string str);
#endif

#ifdef __SOMIDL__
	implementation
	{
#ifdef __PRIVATE__
		long sink_fd;
		unsigned long sink_mask;
		long timer_count;
		long timer_interval;
		string client_type;
		long event_mask;
		someGetRegDataClientType: procedure;
		someGetRegDataEventMask: procedure;
		someGetRegDataSink: procedure;
		someGetRegDataSinkMask: procedure;
		someGetRegDataTimerCount: procedure;
		someGetRegDataTimerInterval: procedure;
		dupl_string: noself,procedure;
#endif
		releaseorder : 
			someClearRegData,
			someSetRegDataClientType,
			someSetRegDataEventMask,
			someSetRegDataSink,
			someSetRegDataSinkMask,
			someSetRegDataTimerCount,
			someSetRegDataTimerInterval
#ifdef __PRIVATE__
			,someGetRegisterData,
			someGetRegDataClientType,
			someGetRegDataEventMask,
			someGetRegDataSink,
			someGetRegDataSinkMask,
			someGetRegDataTimerCount,
			someGetRegDataTimerInterval,
			dupl_string
#endif
			;
		majorversion = 2;
		minorversion = 1;
		callstyle = idl;
		dllname = "somem.dll";
#ifdef __PRIVATE__
		filestem = emregdat;
		functionprefix = "emregdat_";
		somInit : override;
		somUninit : override;
#endif
	};
#endif /* __SOMIDL__ */
};
#endif /* emregdat_idl */
