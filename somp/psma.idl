#ifndef psma_idl
#define psma_idl
#include <somp.idl>
#include <somobj.idl>
#include <somperrd.idl>
#include <snglicls.idl>
#include <somref.idl>
interface SOMPIOGroupMgrAbstract;
interface SOMPIOGroup;
interface SOMPNameSpaceMgr;
interface SOMPAscii;
interface SOMPKeyedSet;
interface SOMPPersistentId;
interface SOMPPersistentObject;
interface SOMPPersistentStorageMgr;
interface SOMPPersistentStorageMgr :
	SOMRefObject
{
	const unsigned short SOMP_STORING_ON=3;
	const unsigned short SOMP_STORING_OFF=4;
	const unsigned short SOMP_RESTORING_ON=5;
	const unsigned short SOMP_RESTORING_OFF=6;
	void sompStoreObject(
		in SOMPPersistentObject thisObject)
			raises (SOMPError::sompException);
	SOMObject sompRestoreObject(
		in SOMPPersistentId objectID)
			raises (SOMPError::sompException);
	void sompStoreObjectWithoutChildren(
		in SOMPPersistentObject thisObject)
			raises (SOMPError::sompException);
	SOMObject sompRestoreObjectWithoutChildren(
		in SOMPPersistentId objectID)
			raises (SOMPError::sompException);
	void sompDeleteObject(
		in SOMPPersistentId objectID)
			raises (SOMPError::sompException);
	boolean sompObjectExists(
		in SOMPPersistentId objectID)
			raises (SOMPError::sompException);
	void sompAddObjectToWriteSet(
		in SOMPPersistentObject thisObject)
			raises (SOMPError::sompException);
	void sompAddIdToReadSet(
		in SOMPPersistentId objectID)
			raises (SOMPError::sompException);
	SOMObject sompRestoreObjectFromIdString(
		in string idString)
			raises (SOMPError::sompException);
#ifdef __SOMIDL__
	implementation
	{
		callstyle = idl;
		dllname = "somp.dll";
		releaseorder : 
			sompStoreObject,
			sompRestoreObject,
			sompStoreObjectWithoutChildren,
			sompRestoreObjectWithoutChildren,
			sompDeleteObject,
			sompObjectExists,
			sompAddObjectToWriteSet,
			private7,
			sompAddIdToReadSet,
			private9,
			private10,
			private11,
			private12,
			private13,
			private14,
			sompRestoreObjectFromIdString,
			private16,
			private17,
			private18,
			private19,
			private20,
			private21;
		majorversion = 2;
		minorversion = 1;
		filestem = psma;
		metaclass = SOMMSingleInstance;
#ifdef __PRIVATE__
		somInit : override;
		somUninit : override;
		functionprefix = psma_;
#endif
	};
#endif /* __SOMIDL__ */
};
#endif /* psma_idl */
