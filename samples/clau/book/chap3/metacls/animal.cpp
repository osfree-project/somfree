/**************************************************************************
 *
 *  Copyright 1994, Christina Lau
 *
 *  This file is part of Object-Orientated Programming using SOM and DSOM.
 *
 *  This program is free software: you can redistribute it and/or modify it
 *  under the terms of the GNU Lesser General Public License as published by the
 *  Free Software Foundation, either version 3 of the License, or (at your
 *  option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 *  more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>
 *
 */


/*
 *  This file was generated by the SOM Compiler and Emitter Framework.
 *  Generated using: 
 *      SOM Emitter emitxtm: somc/smmain.c
 */

#define Animal_Class_Source
#define MetaAnimal_Class_Source
#include <animal.xih>
#include <stdio.h>

SOM_Scope void  SOMLINK sleep(Animal *somSelf,  Environment *ev)
{
    AnimalData *somThis = AnimalGetData(somSelf);
    AnimalMethodDebug("Animal","sleep");

    if (somThis->name) 
    {
       printf("%s snooze...\n", somThis->name);
    }
}

SOM_Scope void  SOMLINK somInit(Animal *somSelf)
{
    AnimalData *somThis = AnimalGetData(somSelf);
    AnimalMethodDebug("Animal","somInit");

    somThis->name = NULL;
    Animal_parent_SOMObject_somInit(somSelf);
}

SOM_Scope Animal*  SOMLINK createAnimal(MetaAnimal *somSelf, 
                                        Environment *ev, string name)
{
    Animal *animal;
    MetaAnimalData *somThis = MetaAnimalGetData(somSelf); 
    MetaAnimalMethodDebug("MetaAnimal","createAnimal");

    animal = somSelf->somNew();
    animal->_set_name(ev, name);
    (somThis->count)++;

    return animal;
}
